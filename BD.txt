/******************************************************************************/
/***          Generated by IBExpert 2015.7.26.1 14.12.2015 0:37:00          ***/
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES WIN1251;

CREATE DATABASE 'C:\123\BIBLIOTEKA.FDB'
USER 'SYSDBA' PASSWORD 'masterkey'
PAGE_SIZE 16384
DEFAULT CHARACTER SET WIN1251 COLLATION WIN1251;



/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/



CREATE TABLE AUTHOR (
    ID           INTEGER NOT NULL,
    SURNAME      VARCHAR(50) NOT NULL,
    NAME         VARCHAR(50) NOT NULL,
    PARTRONYMIC  VARCHAR(50) NOT NULL
);


CREATE TABLE BOOK (
    ID        INTEGER NOT NULL,
    NAME      VARCHAR(50) NOT NULL,
    ID_TYPE   INTEGER NOT NULL,
    ID_GENRE  INTEGER NOT NULL
);


CREATE TABLE BOOK_AUTHOR (
    ID_AUTHOR  INTEGER NOT NULL,
    ID_BOOK    INTEGER NOT NULL
);


CREATE TABLE EXEMP (
    ID           INTEGER NOT NULL,
    ID_BOOK      INTEGER NOT NULL,
    WRITTEN_OFF  CHAR(1)
);


CREATE TABLE GENRE (
    ID    INTEGER NOT NULL,
    NAME  VARCHAR(50) NOT NULL
);


CREATE TABLE IBE$SCRIPTS (
    IBE$SCRIPT_NAME           VARCHAR(64) CHARACTER SET UTF8 NOT NULL,
    IBE$SCRIPT_TYPE           VARCHAR(15) CHARACTER SET UTF8 NOT NULL,
    IBE$SCRIPT_SOURCE         BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
    IBE$SCRIPT_BLR            BLOB SUB_TYPE 0 SEGMENT SIZE 1024,
    IBE$SCRIPT_DESCRIPTION    BLOB SUB_TYPE 1 SEGMENT SIZE 1024,
    IBE$SCRIPT_STATE          VARCHAR(15) CHARACTER SET UTF8 DEFAULT 'INVALID' NOT NULL,
    IBE$SCRIPT_ACTION_ID      INTEGER,
    IBE$SCRIPT_FORM           BLOB SUB_TYPE 0 SEGMENT SIZE 1024,
    IBE$SCRIPT_PARAM_HISTORY  BLOB SUB_TYPE 0 SEGMENT SIZE 1024,
    IBE$SCRIPT_ADD_DATA       BLOB SUB_TYPE 1 SEGMENT SIZE 1024
);


CREATE TABLE INTAKE (
    ID            INTEGER NOT NULL,
    DATE_INTAKE   DATE NOT NULL,
    ID_PROVAIDER  INTEGER NOT NULL,
    ID_EXEMP      INTEGER NOT NULL
);


CREATE TABLE OPERATION (
    ID                INTEGER NOT NULL,
    ID_READERSHIP     INTEGER NOT NULL,
    ID_TYPE_OF_ISSUE  INTEGER NOT NULL,
    PERIOD            VARCHAR(10) NOT NULL,
    DATE_OF_ISSUE     DATE NOT NULL,
    RETERN_DATE       DATE,
    ID_EXEMP          INTEGER NOT NULL
);


CREATE TABLE PROVAIDER (
    ID    INTEGER NOT NULL,
    NAME  VARCHAR(50)
);


CREATE TABLE READERSHIP (
    ID            INTEGER NOT NULL,
    SURNAME       VARCHAR(50) NOT NULL,
    NAME          VARCHAR(50) NOT NULL,
    PARTRONYMIC   VARCHAR(50) NOT NULL,
    PHONE_NUMBER  VARCHAR(20) NOT NULL
);


CREATE TABLE RESERVE (
    ID           INTEGER NOT NULL,
    ID_READSHIP  INTEGER NOT NULL,
    ID_EXEMP     INTEGER NOT NULL,
    "DATE"       DATE
);


CREATE TABLE "TYPE" (
    ID    INTEGER NOT NULL,
    NAME  VARCHAR(50) NOT NULL
);


CREATE TABLE TYPE_OF_ISSUE (
    ID    INTEGER NOT NULL,
    NAME  VARCHAR(50) NOT NULL
);


CREATE TABLE WRITE_OFF (
    ID              INTEGER NOT NULL,
    DATE_WRITE_OFF  DATE NOT NULL,
    ID_EXEMP        INTEGER NOT NULL
);




/******************************************************************************/
/***                              Primary keys                              ***/
/******************************************************************************/

ALTER TABLE AUTHOR ADD PRIMARY KEY (ID);
ALTER TABLE BOOK ADD PRIMARY KEY (ID);
ALTER TABLE EXEMP ADD PRIMARY KEY (ID);
ALTER TABLE GENRE ADD PRIMARY KEY (ID);
ALTER TABLE INTAKE ADD PRIMARY KEY (ID);
ALTER TABLE OPERATION ADD PRIMARY KEY (ID);
ALTER TABLE PROVAIDER ADD PRIMARY KEY (ID);
ALTER TABLE READERSHIP ADD PRIMARY KEY (ID);
ALTER TABLE RESERVE ADD PRIMARY KEY (ID);
ALTER TABLE TYPE ADD PRIMARY KEY (ID);
ALTER TABLE TYPE_OF_ISSUE ADD PRIMARY KEY (ID);
ALTER TABLE WRITE_OFF ADD PRIMARY KEY (ID);


/******************************************************************************/
/***                              Foreign keys                              ***/
/******************************************************************************/

ALTER TABLE BOOK ADD FOREIGN KEY (ID_TYPE) REFERENCES "TYPE" (ID);
ALTER TABLE BOOK ADD FOREIGN KEY (ID_GENRE) REFERENCES GENRE (ID);

ALTER TABLE BOOK ADD FOREIGN KEY (ID_GENRE) REFERENCES GENRE (ID);
ALTER TABLE BOOK_AUTHOR ADD FOREIGN KEY (ID_AUTHOR) REFERENCES AUTHOR (ID);
ALTER TABLE BOOK_AUTHOR ADD FOREIGN KEY (ID_BOOK) REFERENCES BOOK (ID);

ALTER TABLE EXEMP ADD FOREIGN KEY (ID_BOOK) REFERENCES BOOK (ID);

ALTER TABLE INTAKE ADD FOREIGN KEY (ID_PROVAIDER) REFERENCES PROVAIDER (ID);
ALTER TABLE INTAKE ADD FOREIGN KEY (ID_EXEMP) REFERENCES EXEMP (ID);

ALTER TABLE OPERATION ADD FOREIGN KEY (ID_EXEMP) REFERENCES EXEMP (ID);
ALTER TABLE OPERATION ADD FOREIGN KEY (ID_READERSHIP) REFERENCES READERSHIP (ID);
ALTER TABLE OPERATION ADD FOREIGN KEY (ID_TYPE_OF_ISSUE) REFERENCES TYPE_OF_ISSUE (ID);

ALTER TABLE RESERVE ADD FOREIGN KEY (ID_READSHIP) REFERENCES READERSHIP (ID);

ALTER TABLE RESERVE ADD FOREIGN KEY (ID_EXEMP) REFERENCES EXEMP (ID);

ALTER TABLE RESERVE ADD FOREIGN KEY (ID_READSHIP) REFERENCES READERSHIP (ID);

ALTER TABLE WRITE_OFF ADD FOREIGN KEY (ID_EXEMP) REFERENCES EXEMP (ID);


/******************************************************************************/
/***                                Indices                                 ***/
/******************************************************************************/

CREATE INDEX IBE$SCRIPTS_BY_ACTION_ID ON IBE$SCRIPTS (IBE$SCRIPT_ACTION_ID);
CREATE UNIQUE INDEX IBE$SCRIPTS_BY_NAME ON IBE$SCRIPTS (IBE$SCRIPT_NAME);
